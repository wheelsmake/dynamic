{"version":3,"file":"dynamic.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../utils/element.ts","webpack:///../utils/generic.ts","webpack:///./src/utils/misc.ts","webpack:///./src/utils/data.ts","webpack:///./src/spa.ts","webpack:///./src/manifest.ts","webpack:///./src/dynamic.ts","webpack:///../utils/arguments.ts","webpack:///./src/dynamic.export.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function e(s :string, scope? :Element | Document) :Node[] | Node{\r\n    if(scope === undefined || !(scope instanceof Element)) scope = document;\r\n        let a :NodeList = scope.querySelectorAll(s);\r\n        if(!a.length) return [];\r\n        //note:当一个页面存在相同ID元素时不会走这里，而会返回数组，因为说好了是querySelectorAll了并且本来就不应该有重复ID，不能怪我啊\r\n        if(a.length == 1 && s.match(/^.*#[^\\s]*$/)) return a[0];\r\n        else return Array.from(a);\r\n}\r\nexport function isDescendant(possibleDescendant :Element, possibleParent :Element) :boolean{\r\n    while(possibleDescendant.tagName != \"HTML\"){\r\n        possibleDescendant = possibleDescendant.parentNode! as Element;\r\n        if(possibleDescendant === possibleParent) return true; \r\n    }\r\n    return false;\r\n}\r\nexport function isInDocument(element :Element) :boolean{\r\n    return isDescendant(element, (e(\"html\") as Node[])[0] as Element);\r\n}\r\nexport function isChild(element :Element, target :Element) :boolean{\r\n    const children = target.childNodes;\r\n    for(let i = 0; i < children.length; i++) if(element === children[i]) return true;\r\n    return false;\r\n}\r\nexport function toHTML(HTML :string) :Node[]{\r\n    if(HTML === \"\" || typeof HTML != \"string\") utils.generic.E(\"HTML\", \"string\", HTML);\r\n    const ele = document.createElement(\"div\");\r\n    ele.innerHTML = HTML;\r\n    return getInnerNodes(ele);\r\n}\r\nexport function getInnerNodes(el :Node | Element) :Node[]{\r\n    var nodes :Node[] = [];\r\n    for(let i = 0; i < el.childNodes.length; i++) nodes[i] = el.childNodes[i].cloneNode(true);\r\n    return nodes;\r\n}\r\n//剥壳器\r\nexport function hatch(element :Element, remove? :boolean) :Node[]{\r\n    //note:Nodelist类型会实时同步造成不稳定的for循环，必须转换为Node[]！\r\n    const par = element.parentElement!, children :Node[] = Array.from(element.childNodes);\r\n    for(let i = 0; i < children.length; i++) par.insertBefore(children[i], element);\r\n    if(remove === true) element.remove();\r\n    return children;\r\n}\r\n//fixme:这个方法特异性太强了吧，能不能不要放在这里？\r\n//最终渲染方法，老祖宗求你别出bug\r\nexport function render(HTML :string | Element | HTMLCollection | Element[] | Node | NodeList | Node[], element :Element, insertAfter? :boolean, append? :boolean, disableDF? :boolean) :Node[]{\r\n    if(element.parentElement === null) utils.generic.EE(\"cannot render by '<html>' element, since it's root of document.\");\r\n    var html :Node[] = [];\r\n    if(typeof HTML == \"string\") html = toHTML(HTML);\r\n    else if(HTML instanceof Element || HTML instanceof Node) html[0] = HTML.cloneNode(true);\r\n    else if(HTML instanceof HTMLCollection || HTML instanceof NodeList) for(let i = 0; i < HTML.length; i++) html[i] = HTML.item(i)!.cloneNode(true);\r\n    else html = HTML;\r\n    const Rhtml = [...html].reverse(), parent = element.parentElement;\r\n    if(append === true) for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n    else if(append === false) for(let i = 0; i < Rhtml.length; i++) element.prepend(Rhtml[i]);\r\n    else if(insertAfter === true){\r\n        if(!element.nextSibling) for(let i = 0; i < Rhtml.length; i++) parent!.append(Rhtml[i]);\r\n        else for(let i = 0; i < Rhtml.length; i++) parent!.insertBefore(Rhtml[i], element.nextSibling);\r\n    }\r\n    else if(insertAfter === false) for(let i = 0; i < html.length; i++) parent!.insertBefore(html[i], element);\r\n    else for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n    //todo:加入作用域\r\n    return html;\r\n}","/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function randoma2Z(length :number) :string{ //52\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 52);\r\n        if(r > 25) s += String.fromCharCode(r + 71);\r\n        else s += String.fromCharCode(r + 65);\r\n    }\r\n    return s;\r\n}\r\nexport function randoma2z029(length :number) :string{ //36\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 36);\r\n        if(r < 10) s += r;\r\n        else s += String.fromCharCode(r + 87);\r\n    }\r\n    return s;\r\n}\r\nexport function precisePop<T>(ele :T, array :any[]) :T | null{\r\n    if(array.indexOf(ele) === -1) return null;\r\n    return array.splice(array.indexOf(ele), 1)[0];\r\n}\r\n//递归冻结对象\r\nexport function constantize(obj :anyObject) :void{\r\n    Object.freeze(obj);\r\n    for(let i = 0; i < Object.keys(obj).length; i++) if(typeof obj[Object.keys(obj)[i]] == \"object\") constantize(obj[Object.keys(obj)[i]]);\r\n}\r\nexport function E(argument :string, type? :string, value? :any, reason? :string) :never{\r\n    if(argument === undefined) throw new Error(\"An error occured.\");\r\n    else{\r\n        console.error(\"ERROR INFO: argument\", argument, \",type\", type, \",value\", value, \",reason\", reason); //为了拿到真正的value，其他类型toString后啥信息都没了\r\n        throw new Error(`Argument '${argument}' ${type ? `should be a(an) ${type}` : \"is invalid\"}${reason ? `, reason: ${reason}` : \"\"}${value ? `, got ${value}` : \"\"}.`);\r\n    }\r\n}\r\nexport function EE(message :any) :never{throw new Error(message);}\r\nexport function repeat<T>(item :T, count :number) :T[]{\r\n    if(typeof count != \"number\" || count < 1) utils.generic.E(\"count\", \"integer bigger than 0\", count);\r\n    return Array(count).fill(item, 0, count);\r\n}\r\nexport function noRepeat<T>(input :T[]) :T[]{\r\n    return Array.from(new Set(input)); //Set可是连IE11都支持的东西啊\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"../utils/index\";\r\nexport function eliminateSymbol(property :string | Symbol) :string{\r\n    if(typeof property == \"symbol\") utils.generic.E(property.toString(), \"string\", property,  \"index of Dynamic.data must not be a Symbol\");\r\n    return property as string;\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"../utils/index\";\r\nexport function createData(\r\n    value? :any,\r\n    shouldUpdate? :string[],\r\n    shouldExport? :((node? :Node)=>void)[]\r\n) :data{\r\n    const result :data = {\r\n        value,\r\n        deleted: false,\r\n        shouldUpdates: shouldUpdate ? shouldUpdate : [],\r\n        shouldExports: shouldExport ? shouldExport : []\r\n    }\r\n    if(isComputedProperty(result)) result.cache = undefined;\r\n    return result;\r\n}\r\nexport function addExport(dataInstance :data, func :exportFunc) :shouldExportA{\r\n    const sE = dataInstance.shouldExports, funcString = func.toString();\r\n    //检测函数是否是箭头函数，箭头函数拿不到this，一定会出错\r\n    if(funcString.match(/^\\([^\\(\\)]*\\)[\\s]*=>/)) utils.generic.E(\"func\", \"exportFunc\", func, \"export function must not be an arrow function\");\r\n    //检测shouldExport里是不是已经有了完全相同的函数。indexOf()使用全等（===）进行比较。\r\n    //important:这里的函数还是原函数，不能bind，不然后面查重就失效了，我们等到用的时候再bind也不迟\r\n    //并且分析函数还需要bind不同的东西\r\n    if(sE.indexOf(func) == -1) sE.push(func);\r\n    else console.warn(\"Duplicated function\", func, \"is blocked being added to data\", dataInstance);\r\n    return sE;\r\n}\r\nexport function removeExport(dataInstance :data, func :string | exportFunc) :shouldExportA{\r\n    const sE = dataInstance.shouldExports;\r\n    if(typeof func == \"string\"){\r\n        if(func == \"__addedByDynamic__\") utils.generic.E(\"func\", \"string | exportFunc\", func, \"this name is reserved\");\r\n        else if(func == \"\") console.warn(\"Operation blocked trying to remove ALL annoymous functions. Use the function itself for argument instead.\");\r\n        //注意这里会删除所有同名函数！\r\n        else for(let i = 0; i < sE.length; i++) if(sE[i].name === func) utils.generic.precisePop(sE[i], sE);\r\n    }\r\n    else if(typeof func == \"function\") utils.generic.precisePop(func, sE); //不是exportFunc没关系；precisePop已经处理了-1\r\n    else utils.generic.E(\"func\", \"string | exportFunc\", func);\r\n    return sE;\r\n}\r\nexport function isComputedProperty(data :data) :boolean{\r\n    return typeof data.value == \"function\";\r\n}\r\nexport function pushCache(){\r\n\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../utils/index\";\r\nimport * as localUtils from \"./utils/index\";\r\nexport function getSearch() :SSkvObject | null{\r\n    var s = location.search;\r\n    if(s != \"\"){\r\n        s = s.substring(1);\r\n        const result :SSkvObject = {};\r\n        s.split(\"&\").forEach(value=>{\r\n            const sp = value.split(\"=\");\r\n            result[sp[0]] = sp[1];\r\n        });\r\n        return result;\r\n    }\r\n    else return null;\r\n}\r\nexport function getHash(){\r\n    \r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../utils/index\";\r\nimport * as localUtils from \"./utils/index\";\r\nexport function add(){\r\n    //todo:\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../utils/index\";\r\nimport * as lUtils from \"./utils/index\";\r\nconst isBeta = true;\r\n\r\n\r\n//开发模式\r\nconsole.info(\r\n`dynamic(dnJS) ©LJM12914. https://github.com/wheelsmake/dynamic\r\nYou are using the unminified build of dynamic. Make sure to use the minified build for production.`);\r\nconst isDEVMode = \"__dn_DEV__\" in window && (window as anyObject).__dn_DEV__ === true && isBeta;\r\n\r\n\r\n//字符串重用\r\nconst s :string[] = [\r\n    \"鬼片出现了！\",\r\n    \"Access to deleted property was blocked: \"\r\n];\r\n\r\n\r\n//主类\r\nclass App{\r\n    #rootNode :Element;\r\n    #data :dataObject = {};\r\n    #proxy :dataObject;\r\n    constructor(rootNode :Elementy){\r\n        this.#rootNode = utils.arguments.reduceToElement(rootNode)!;\r\n        console.info(\"creating new dynamic instance with rootNode\", rootNode);\r\n        //note:sharpData === this.#data\r\n        this.#proxy = new Proxy(this.#data, {\r\n            get(sharpData :dataObject, property :string | symbol, proxy :dataObject) :any{\r\n                property = lUtils.misc.eliminateSymbol(property);\r\n                console.log(\"get\", property);\r\n                if(property in sharpData && !sharpData[property].deleted){\r\n                    var result :any;\r\n                    //如果value是函数就先执行它，获得返回值，这是约定\r\n                    if(typeof sharpData[property].value == \"function\") result = (sharpData[property].value.bind(proxy))();\r\n                    else result = sharpData[property].value;\r\n                    //优化object显示，不要显示[object Object]；如果转换出错，那么result不会被更改，还是[object Object]\r\n                    if(typeof result == \"object\") try{result = JSON.stringify(result);}catch{}\r\n                    //symbol不能隐式转换为字符串，浏览器会抛出错误，但是我们不应该吞掉开发者的错误，所以不用管它\r\n                    //else if(typeof result == \"symbol\")\r\n                    return result;\r\n                }\r\n                //该属性已被删除\r\n                else if(sharpData[property].deleted) console.warn(`${s[1]}${property}.`);\r\n                else return undefined;\r\n            },\r\n            set(sharpData :dataObject, property :string | symbol, newValue :unknown, proxy :dataObject) :boolean{\r\n                property = lUtils.misc.eliminateSymbol(property);\r\n                console.log(\"set\", property, newValue);\r\n                //正常存在该属性\r\n                if(property in sharpData && !sharpData[property].deleted){\r\n                    //如果传入的是函数，那么就收集函数中需要的属性，将这些属性的shouldUpdate中推一个这个属性\r\n                    //`a.shouldUpdate[number] = \"b\"` 的意思是：当属性a发生改变时，要去更新b\r\n                    //更新b并不是运行一次b.value函数，而是去更新b.shouldExport，重新运行一遍这些方法，将DOM中的b更新\r\n                    //我们也要同样地去b.shouldUpdate里将它们的shouldExport运行了，因为它们的值也“应该”改变了\r\n                    //这是一个递归过程，一直从shouldUpdate下去，一直运行shouldExport\r\n                    if(typeof newValue == \"function\"){\r\n                        //newValue = (newValue.bind(proxy))();\r\n\r\n                    }\r\n                    const oldValue = sharpData[property].value;\r\n                    sharpData[property].value = newValue;\r\n                    //更新依赖方法\r\n                    const exports = sharpData[property].shouldExports,\r\n                          updates = sharpData[property].shouldUpdates;\r\n                    for(let i = 0; i < updates.length; i++){\r\n\r\n                    }\r\n                    for(let i = 0; i < exports.length; i++) (exports[i].bind(proxy))(oldValue);\r\n                }\r\n                //该属性已被删除\r\n                else if(sharpData[property].deleted) console.warn(`${s[1]}${property}.`);\r\n                //尚未有该属性，新建\r\n                else{\r\n                    sharpData[property] = lUtils.data.createData(newValue, [], []);\r\n                    if(lUtils.data){\r\n                        //todo:\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            //用has拦截in运算没必要，因其不会导致#data状态的改变\r\n            //Proxy的defineProperty只会在Object.defineProperty走到，别听MDN的\r\n            //https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/defineProperty#:~:text=proxy.property%3D%27value%27\r\n            //只要警告他们不要用Object.defineProperty往data里扔东西就好了\r\n            deleteProperty(sharpData :dataObject, property :string | symbol) :boolean{\r\n                //review:不要真正删除而是标记删除\r\n                property = lUtils.misc.eliminateSymbol(property);\r\n                const exists = property in sharpData;\r\n                if(exists) sharpData[property].deleted = true;\r\n                return exists;\r\n            }\r\n        });\r\n        this.#detectInsert(this.#rootNode);\r\n    }\r\n\r\n    get rootNode(){return this.#rootNode;}\r\n    //proxy本身没有不可变性，必须再用一个data只读伪属性保护\r\n    //内部不要引用这个data！内部为什么不直接引用#proxy呢？？？？？\r\n    get data(){return this.#proxy;}\r\n    //缩写\r\n    get _(){return this.#proxy;}\r\n    //开发模式\r\n    get __privateData__(){\r\n        if(isDEVMode) return this.#data;\r\n        else return \"BLOCKED IN NON-DEV MODE\";\r\n    }\r\n\r\n    addExport(dataProperty :string, func :exportFunc){\r\n        return lUtils.data.addExport(this.#data[dataProperty], func);\r\n    }\r\n    removeExport(dataProperty :string, func :string | exportFunc){\r\n        return lUtils.data.removeExport(this.#data[dataProperty], func);\r\n    }\r\n    parseTemplate(node :Node) :void{this.#detectInsert(node);}\r\n    #detectInsert(node :Node) :void{\r\n        if(node instanceof Element){\r\n            //hack:超级hack完美解决作用域内部元素on*事件必须访问全局App才能访问数据的问题\r\n            //给作用域内每个元素的data和_都弄上这个data，然后只要this一下就出来了！\r\n            const data = this.data;\r\n            Object.defineProperty(node, \"data\", {\r\n                configurable: false,\r\n                enumerable: true,\r\n                get(){return data;}\r\n            });\r\n            Object.defineProperty(node, \"_\", {\r\n                configurable: false,\r\n                enumerable: true,\r\n                get(){return data;}\r\n            });\r\n            const attrs = node.attributes, children = Array.from(node.childNodes) as Node[];\r\n            //别写in，否则出一大堆方法，NameNodeMap可以用数组那套，NameNodeMap.length返回的是正确的长度\r\n            for(let i = 0; i < attrs.length; i++){\r\n                //检查属性名和属性值，它们都要求全部是，不允许中途插入\r\n                if(attrs[i].name.match(/:_[a-zA-Z$_][\\w$]*_:/)){\r\n                    const property = attrs[i].name.substring(2, attrs[i].name.length - 2);\r\n                    if(!(property in this.#data)) this.#data[property] = lUtils.data.createData();\r\n                    const __addedByDynamic__ = function(this :anyObject, oldValue :any){ //参数里放this不影响函数的参数\r\n                        const valueOfAttr = node.getAttribute(oldValue)!; //review:可不可能得到null？\r\n                        node.setAttribute(this[property], valueOfAttr);\r\n                        node.removeAttribute(oldValue);\r\n                    }\r\n                    lUtils.data.addExport(this.#data[property], __addedByDynamic__);\r\n                    //这个用来引发一次导出过程，将:__:标识变成开发者赋的值或undefined\r\n                    (this.#proxy[property] as any) = undefined;\r\n                }\r\n                if(attrs[i].value.match(/:_[a-zA-Z$_][\\w$]*_:/)){\r\n                    //name变量用于将属性名转换为值类型，取消响应性\r\n                    const property = attrs[i].value.substring(2, attrs[i].value.length - 2), name = attrs[i].name;\r\n                    if(!(property in this.#data)) this.#data[property] = lUtils.data.createData();\r\n                    const __addedByDynamic__ = function(this :anyObject){ //参数里放this不影响函数的参数\r\n                        node.setAttribute(name, this[property]);\r\n                    }\r\n                    lUtils.data.addExport(this.#data[property], __addedByDynamic__);\r\n                    //这个用来引发一次导出过程，将:__:标识变成开发者赋的值或undefined\r\n                    (this.#proxy[property] as any) = undefined;\r\n                }\r\n            }\r\n            //进入子节点\r\n            for(let i = 0; i < node.childNodes.length; i++) this.#detectInsert(node.childNodes[i]);\r\n        }\r\n        else if(node instanceof Text){\r\n            //fixed:如果修改Element的textContent则会覆盖所有子元素，所以我们仅在文本节点上执行这边的代码\r\n            //fixme:但是文本节点很容易被浏览器乱扔，这个目前没想到好的方法\r\n            if(node.textContent){\r\n                const inserts = [...node.textContent.matchAll(/:_[a-zA-Z$_][\\w$]*_:/g)];\r\n                //没有匹配到则为null，匹配到则[n]为:_example_:\r\n                if(inserts.length > 0){\r\n                    /*note:\r\n                     * 这里所做的事和一个字符串模板引擎没有什么区别。\r\n                     * 我们先确定这一段文字中所有的插入点在哪里；\r\n                     * 然后保存好这一段文字，更新时要用的；\r\n                     * 然后确定要使用哪些属性，给它们都添加新建的一个方法；\r\n                     * 这个新建的方法是一个标准的属性shouldExport方法，但是它被多个属性共用（这个不足为奇）；\r\n                     * 方法的具体内容是：收集所有需要的属性，用保存好的文字加上模板，然后塞回节点里；\r\n                     * \r\n                     * 简单来说就是新建一个函数，塞语句和文字进去，把它记录成所有依赖属性的shouldExport方法\r\n                     */\r\n                    const offsets = [], properties = [], text = node.textContent;\r\n                    //收集数据并创建尚未创建的属性\r\n                    for(let i = 0; i < inserts.length; i++){\r\n                        const property = inserts[i][0].substring(2, inserts[i][0].length - 2);\r\n                        offsets.push(inserts[i].index);\r\n                        properties.push(property);\r\n                        if(!(property in this.#data)) this.#data[property] = lUtils.data.createData();\r\n                    }\r\n                    if(offsets.length != properties.length) console.error(s[0], offsets, properties); //鬼片检验\r\n                    //构造并记录export方法\r\n                    const NRproperties = utils.generic.noRepeat(properties);\r\n                    const __addedByDynamic__ = function(this :anyObject){ //参数里放this不影响函数的参数\r\n                        var t = text; //为了保证它是值类型，node.textContent是引用类型，会变\r\n                        for(let i = 0; i < NRproperties.length; i++) t = t.replaceAll(`:_${NRproperties[i]}_:`, this[NRproperties[i]]);\r\n                        node.textContent = t;\r\n                    }\r\n                    for(let i = 0; i < NRproperties.length; i++){\r\n                        lUtils.data.addExport(this.#data[NRproperties[i]], __addedByDynamic__);\r\n                        //这个用来引发一次导出过程，将:__:标识变成开发者赋的值或undefined\r\n                        (this.#proxy[NRproperties[i]] as any) = undefined;\r\n                    }\r\n                }\r\n                //else\r\n            }\r\n            //else\r\n        }\r\n        else console.error(s[0], node);\r\n    }\r\n}\r\n\r\n\r\n//分文件开发\r\nimport * as spa from \"./spa\";\r\nimport * as manifest from \"./manifest\";\r\n//构造导出对象\r\nconst Dynamic = {\r\n    //主方法\r\n    new(rootNode :Elementy){\r\n        return new App(rootNode);\r\n    },\r\n    spa, manifest,\r\n    //实用方法\r\n    e(s: string, scope?: Element | Document): Node | Node[]{return utils.element.e(s, scope);},\r\n    \r\n    debugger() :number{\r\n        return setInterval(()=>{\r\n            debugger;\r\n        }, 20) as unknown as number; //™怎么默认NodeJS环境了？？？？？\r\n    }\r\n}\r\nutils.generic.constantize(Dynamic);\r\n\r\n\r\n//对象导出\r\nexport default Dynamic;","/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\n/**一定会返回Element，void为报错hack*/\r\nexport function reduceToElement(input :Elementy) :Element | void{\r\n    if(input instanceof Element) return input;\r\n    else if(typeof input == \"string\"){\r\n        const el = utils.element.e(input);\r\n        if(el instanceof Node) return el as Element;\r\n        else utils.generic.E(\"rootNode\", \"string | Element\", input, \"rootNode should be a VALID #id selector\"); //fixed:现在不会走到new Element()那儿了\r\n    }\r\n    else utils.generic.E(\"rootNode\", \"string | Element\", input, \"rootNode should be a #id selector or an Element\");\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport Dynamic from \"./dynamic\";\r\n//fixed:当作模块使用的时候不需要弄到全局作用域，所以将这个东西抽出来了\r\nObject.defineProperty(window, \"Dynamic\", {\r\n    configurable: false,\r\n    writable: false,\r\n    enumerable: true,\r\n    value: Dynamic\r\n});"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","e","s","scope","undefined","Element","document","a","querySelectorAll","length","match","Array","from","precisePop","ele","array","indexOf","splice","E","argument","type","reason","Error","console","error","eliminateSymbol","property","toString","createData","shouldUpdate","shouldExport","result","deleted","shouldUpdates","shouldExports","isComputedProperty","cache","addExport","dataInstance","func","sE","push","warn","removeExport","i","name","data","pushCache","getSearch","location","search","substring","split","forEach","sp","getHash","add","isDEVMode","window","__dn_DEV__","App","constructor","rootNode","this","input","el","Node","Proxy","sharpData","proxy","bind","JSON","stringify","set","newValue","oldValue","updates","deleteProperty","exists","_","__privateData__","dataProperty","parseTemplate","node","configurable","attrs","attributes","childNodes","__addedByDynamic__","valueOfAttr","getAttribute","setAttribute","removeAttribute","Text","textContent","inserts","matchAll","offsets","properties","text","index","NRproperties","Set","t","replaceAll","Dynamic","new","spa","manifest","debugger","setInterval","constantize","freeze","keys","writable"],"sourceRoot":""}